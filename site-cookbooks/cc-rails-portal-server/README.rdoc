= Notes about setting a cc-rails-portal-server

Currently the cc-rails-portal-server uses an AWS RDS database
This is hardcoded in the templates of this cookbook.

It also uses an AWS SES smtp setup. The credentials for this are
pulled from variables somewhere...
talk to Scott to get them if you need them.
We currently only have the ability to send to concord.org email addresses through AWS SES.

It currently is using override_attributes in rails-portal-server role but it seems like it shouldn't need
to. I think there is a bug in littlechefs precedence implementation.

= We have to modify the default size of the max_allowed_packet for our RDS when importing data.
 
* see: http://www.eaglegenomics.com/2010/11/changing-mysql-db-parameter-on-amazon-rds-instance/
* see: http://www.liferay.com/web/guest/community/forums/-/message_boards/message/124969

<pre><code>
 rds-create-db-parameter-group bigger_max_packet --description="increase max_packet size for rites tables" --engine=MySQL5.1

 rds-create-db-parameter-group ritesportal -d "increase max_packet size for rites tables" -f mysql5.1
 
 rds-modify-db-parameter-group ritesportal -p "name=max_allowed_packet,value=16777216, method=immediate"
 
 rds-modify-db-instance rites-staging --db-parameter-group-name=ritesportal
 
 rds-reboot-db-instance rites-staging
<pre></code>

= Moving production data to the EC2 instance:
  
  <pre></code>
  mysqldump -u $DB_USER -p$DB_PASSWORD --lock-tables=false --add-drop-table --quick --extended-insert $DATABASE_NAME | pv | mysql -C -h $RDS_NAME.cheea3ib6y8u.us-east-1.rds.amazonaws.com -u $RDS_USER -p$RDS_PASSWORD portal
  <pre></code>


= Things to backup

* built installers
* uploaded resources. Paperclip, rails 3 and S3: http://doganberktas.com/2010/09/14/amazon-s3-and-paperclip-rails-3/
* sparks-content? I think this a checkout from github so it doesn't need to be backedup

= Things not to backup

* log this can be recovered by stoping frozen server and mounting its file system
* nces_data this is downloaded and used once so it doesn't need to be backed up
* rinet-data this is downloaded on a schedule, put in the database and then not looked at again.
* system this is only used by paperclip which is handled above
* otrunk-examples this is not really used


